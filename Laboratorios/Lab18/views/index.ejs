<!DOCTYPE html>
<html>
    <%- include('includes/head.ejs') %>
<body>
    <%- include('includes/header.ejs') %>
    
    <div class="container-fluid">
        <div class="px-lg-5">
            <p class="h1 text-center">UN MUNDO DE SUPER HEROES</p>
            <p class="text-center">
                Ni Superman, Iron Man o La Mujer Maravilla son tan importantes cómo las 
                y los Heroes de carne y hueso que encontrarás en este sitio. Espero que 
                ellas y ellos te sirvan como inspiración para poder cumplir tus objetivos. 
            </p>
            <% if( isLoggedIn ) { %>
            <a class="btn btn-dark" href="/add" type="button">Agregar Nuevo</a>
            <% } %>
            <div class="row">
                <% if (lista_heroes.length > 0) { %>
                    <% for (let heroe of lista_heroes) { %>
                <!-- Gallery item -->
                <div class="card bg-secondary text-white" style="width:400px; margin: 1rem;">
                    <img class="card-img-top" src="/images/<%= heroe.imagen %>" alt="Card image" style="width:350px; height: 270px;">
                    <div class="card-body">
                        <h4 class="card-title"><%= heroe.nombre %></h4>
                        <a id="heroe" href="/detalle/<%= heroe.id %>" class="btn btn-dark">Ver información</a>
                    </div>
                </div>
                <!-- End -->
                    <% } %>
                <% } else { %>
                    <h3>Aún no se han agregado heroes al Mural</h3>
                <% } %>
            </div>
            
            <div class="card">
                <div class="card-header">
                    
                </div>
                <div class="card-body">
                    <h5 class="card-title">¿Qué ventajas tiene escribir el código SQL únicamente en la capa del modelo?</h5>
                    <p class="card-text">
                        Permite que nuestro código este limpio y ordenado. Además, debido a que no todas las bases de datos están estandarizadas o construidas
                        de la misma forma, por lo cual pueden existir variaciones, etc. Por lo cual, tener una capa especificamente para el código SQL nos ofrece la capacidad de poder corregir, actualizar o generar la 
                        sintaxis correcta para su variante dinamicamente. 
                        <br>
                        También es importante señalar que brinda una mejora en el rendimiento. 
                    </p>
                    <br>
                </div>
                <div class="card-body">
                    <h5 class="card-title">¿Qué es SQL injection y cómo se puede prevenir?</h5>
                    <p class="card-text">
                        SQL Injection es una vulnerabilidad de seguridad web que permite al atacante interferir con las queries que 
                        una aplicación hace con su base de datos. En este caso, el atacante podría visualizar los datos que no deberían ser visibles para el usuario después de injectar código
                        a alguna de nuestras query. 
                        <br>
                        Formas de prevenir SQL injection:
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Convertir siempre el valor a su tipo correspondiente</li>
                            <li class="list-group-item">Parametrizar las consultas SQL</li>
                            <li class="list-group-item">Usar una cuenta con permisos restringidos a la base de datos</li>
                            <li class="list-group-item">No mostrar al usuario la información de error generada por la base de datos</li>
                            <li class="list-group-item">Rechazar las peticiones con caractéres sospechosos</li>
                        </ul>
                    </p>
                    <br>
                    <blockquote class="blockquote" style="font-size: small;">
                        <p class="blockquote-footer">
                            Tips para evitar SQL Injection – Return(GiS); (2010, October 29). Retrieved October 14, 2021, from Geeks.ms website: https://geeks.ms/gtorres/2010/10/29/tips-para-evitar-sql-injection/
                        </p>
                        <p class="blockquote-footer">
                            What is SQL Injection? Tutorial & Examples | Web Security Academy. (2021). Retrieved October 14, 2021, from Portswigger.net website: https://portswigger.net/web-security/sql-injection
                        </p>
                    </blockquote>
                </div>
            </div> 
            
        </div>
    </div>
    <%- include('includes/Footer.ejs') %>
</body>
</html>